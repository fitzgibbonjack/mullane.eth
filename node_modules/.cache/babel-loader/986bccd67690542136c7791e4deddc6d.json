{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst useScrollDirection = () => {\n  _s();\n\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [prevScrollPosition, setPrevScrollPosition] = useState(0);\n\n  const toggleScrollDirection = () => {\n    let scrollY = window.scrollY;\n\n    if (scrollY === 0) {\n      setScrollDirection(null);\n    }\n\n    if (scrollY > prevScrollPosition) {\n      setScrollDirection(\"down\");\n    } else if (scrollY < prevScrollPosition) {\n      setScrollDirection(\"up\");\n    }\n\n    setPrevScrollPosition(scrollY);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleScrollDirection);\n    return () => {\n      window.removeEventListener(\"scroll\", toggleScrollDirection);\n    };\n  });\n  return scrollDirection;\n};\n\n_s(useScrollDirection, \"ymPgjJZyeIsiS/6f3ICNV3V+cFY=\");","map":{"version":3,"sources":["/Users/jackfitzgibbon/Desktop/portfolio/frontend/app/src/hooks/useScrollDirection.js"],"names":["React","useEffect","useState","useScrollDirection","scrollDirection","setScrollDirection","prevScrollPosition","setPrevScrollPosition","toggleScrollDirection","scrollY","window","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACI,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,CAAD,CAA5D;;AAEA,QAAMM,qBAAqB,GAAG,MAAM;AAClC,QAAIC,OAAO,GAAGC,MAAM,CAACD,OAArB;;AACA,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBJ,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AACD,QAAII,OAAO,GAAGH,kBAAd,EAAkC;AAChCD,MAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACD,KAFD,MAEO,IAAII,OAAO,GAAGH,kBAAd,EAAkC;AACvCD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;;AACDE,IAAAA,qBAAqB,CAACE,OAAD,CAArB;AACD,GAXD;;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,qBAAlC;AAEA,WAAO,MAAM;AACXE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCJ,qBAArC;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAOJ,eAAP;AACD,CA1BD;;GAAMD,kB","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst useScrollDirection = () => {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [prevScrollPosition, setPrevScrollPosition] = useState(0);\n\n  const toggleScrollDirection = () => {\n    let scrollY = window.scrollY;\n    if (scrollY === 0) {\n      setScrollDirection(null);\n    }\n    if (scrollY > prevScrollPosition) {\n      setScrollDirection(\"down\");\n    } else if (scrollY < prevScrollPosition) {\n      setScrollDirection(\"up\");\n    }\n    setPrevScrollPosition(scrollY);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", toggleScrollDirection);\n\n    return () => {\n      window.removeEventListener(\"scroll\", toggleScrollDirection);\n    };\n  });\n\n  return scrollDirection;\n};\n"]},"metadata":{},"sourceType":"module"}