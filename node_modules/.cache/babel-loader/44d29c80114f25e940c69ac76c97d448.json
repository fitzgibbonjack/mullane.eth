{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = uri => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(uri);\n        const json = await res.json();\n        setData(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uri]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n\n_s(useFetch, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/jackfitzgibbon/Desktop/portfolio/frontend/app/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","uri","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","json"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5BD,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACF,cAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAvB;AACA,cAAMU,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAR,QAAAA,OAAO,CAACQ,IAAD,CAAP;AACD,OAJD,CAIE,OAAOP,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAND,SAMU;AACRG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAZD;;AAcAC,IAAAA,SAAS;AACV,GAhBQ,EAgBN,CAACP,GAAD,CAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAP;AACD,CAxBD;;GAAMN,Q;;AA0BN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (uri) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(uri);\n        const json = await res.json();\n        setData(json);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [uri]);\n\n  return { data, error, loading };\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}