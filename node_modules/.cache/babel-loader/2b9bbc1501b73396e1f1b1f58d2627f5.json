{"ast":null,"code":"var _jsxFileName = \"/Users/jackfitzgibbon/Desktop/portfolio/frontend/app/src/components/Navigation/Navigation.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport React, { useEffect, useState } from \"react\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport \"./Navigation.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const expandedContext = /*#__PURE__*/React.createContext();\nexport default function Navigation(_ref) {\n  _s();\n\n  let {\n    color\n  } = _ref;\n  const [expanded, setExpanded] = useState(false);\n  const [scrollUp, setScrollUp] = useState(false);\n  let previousScrollPosition = 0;\n\n  const isScrollingDown = () => {\n    let scrolledPosition = window.scrollY;\n    let isScrollDown;\n\n    if (scrolledPosition > previousScrollPosition) {\n      isScrollDown = true;\n      console.log(isScrollDown);\n    } else {\n      isScrollDown = false;\n      console.log(isScrollDown);\n    }\n\n    previousScrollPosition = scrolledPosition;\n    return isScrollDown;\n  };\n\n  window.addEventListener(\"scroll\", function () {\n    isScrollingDown();\n  });\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleClick = () => {\n    if (expanded === true) setExpanded(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(expandedContext.Provider, {\n    value: expanded,\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"main\",\n      className: `main-header ${scrollUp ? \"show\" : \"\"}`,\n      \"aria-label\": \"primary\",\n      style: {\n        background: `${color}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"primary\",\n        className: \"nav container\",\n        children: [/*#__PURE__*/_jsxDEV(HashLink, {\n          to: \"/#main\",\n          onClick: handleClick,\n          tabIndex: 0,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"nav__logo\",\n            src: \"assets/logo.svg\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `nav__links ${expanded ? \"visible\" : \"\"}`,\n          id: \"nav__links\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/about\",\n              onClick: handleClick,\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/projects\",\n              onClick: handleClick,\n              children: \"Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(HashLink, {\n              to: \"/#contact\",\n              onClick: handleClick,\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Hamburger, {\n          onClick: toggleExpanded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"I06JlZFwHBzZXFcqH1t1zmTN56U=\");\n\n_c = Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/jackfitzgibbon/Desktop/portfolio/frontend/app/src/components/Navigation/Navigation.jsx"],"names":["Link","HashLink","React","useEffect","useState","Hamburger","expandedContext","createContext","Navigation","color","expanded","setExpanded","scrollUp","setScrollUp","previousScrollPosition","isScrollingDown","scrolledPosition","window","scrollY","isScrollDown","console","log","addEventListener","toggleExpanded","handleClick","background"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { HashLink } from \"react-router-hash-link\";\nimport React, { useEffect, useState } from \"react\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport \"./Navigation.scss\";\n\nexport const expandedContext = React.createContext();\n\nexport default function Navigation({ color }) {\n  const [expanded, setExpanded] = useState(false);\n  const [scrollUp, setScrollUp] = useState(false);\n\n  let previousScrollPosition = 0;\n\n  const isScrollingDown = () => {\n    let scrolledPosition = window.scrollY;\n    let isScrollDown;\n\n    if (scrolledPosition > previousScrollPosition) {\n      isScrollDown = true;\n      console.log(isScrollDown);\n    } else {\n      isScrollDown = false;\n      console.log(isScrollDown);\n    }\n    previousScrollPosition = scrolledPosition;\n    return isScrollDown;\n  };\n\n  window.addEventListener(\"scroll\", function () {\n    isScrollingDown();\n  });\n\n  const toggleExpanded = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleClick = () => {\n    if (expanded === true) setExpanded(false);\n  };\n\n  return (\n    <expandedContext.Provider value={expanded}>\n      <header\n        id=\"main\"\n        className={`main-header ${scrollUp ? \"show\" : \"\"}`}\n        aria-label=\"primary\"\n        style={{ background: `${color}` }}\n      >\n        <nav aria-label=\"primary\" className=\"nav container\">\n          <HashLink to=\"/#main\" onClick={handleClick} tabIndex={0}>\n            <img className=\"nav__logo\" src=\"assets/logo.svg\" alt=\"logo\" />\n          </HashLink>\n\n          <ul\n            className={`nav__links ${expanded ? \"visible\" : \"\"}`}\n            id=\"nav__links\"\n          >\n            <li>\n              <Link to=\"/about\" onClick={handleClick}>\n                About\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/projects\" onClick={handleClick}>\n                Projects\n              </Link>\n            </li>\n            <li>\n              <HashLink to=\"/#contact\" onClick={handleClick}>\n                Contact\n              </HashLink>\n            </li>\n          </ul>\n\n          <Hamburger onClick={toggleExpanded} />\n        </nav>\n      </header>\n    </expandedContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}